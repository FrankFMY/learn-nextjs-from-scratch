name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    # Проверка качества кода
    lint:
        name: Lint and Format Check
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npm run lint

            - name: Check code formatting
              run: npm run format:check || echo "Format check not configured"

    # Тестирование
    test:
        name: Run Tests
        runs-on: ubuntu-latest
        needs: lint

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test || echo "Tests not configured"

            - name: Upload coverage reports
              uses: codecov/codecov-action@v3
              if: always()

    # Сборка проекта
    build:
        name: Build Application
        runs-on: ubuntu-latest
        needs: [lint, test]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-files
                  path: .next/
                  retention-days: 7

    # Деплой на Vercel (только для main ветки)
    deploy:
        name: Deploy to Vercel
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Deploy to Vercel
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
                  vercel-args: '--prod'

    # Проверка безопасности
    security:
        name: Security Check
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run security audit
              run: npm audit --audit-level=moderate

            - name: Check for known vulnerabilities
              run: npm audit --audit-level=high || echo "High severity vulnerabilities found"

    # Проверка размера бандла
    bundle-size:
        name: Bundle Size Check
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build

            - name: Analyze bundle size
              run: |
                  echo "Bundle size analysis:"
                  du -sh .next/static/chunks/
                  du -sh .next/static/css/
                  du -sh .next/static/js/
